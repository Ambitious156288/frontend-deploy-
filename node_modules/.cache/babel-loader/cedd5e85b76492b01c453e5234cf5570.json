{"ast":null,"code":"import _toConsumableArray from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _this = this,\n    _jsxFileName = \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileContainer.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport FileList from './FileList/FileList';\nimport CreateDirModal from './CreateDirModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCurrentDir, getFileStack, getModeFileView } from '../../redux/file-selector';\nimport { loadFiles, popFromFileStack, setCurrentDir, setFileViewMode, uploadFile } from '../../redux/file-reducer';\nimport UploaderContainer from './FileUploader/UploaderContainer';\nimport ListIcon from '@material-ui/icons/List';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  max-width: 900px;\\n  height: 100vh;\\n  margin: 40px auto;\\n\"])));\nvar Button = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  background: black;\\n  padding: 15px;\\n  color: white;\\n  border-radius: 15px;\\n  outline: none;\\n  cursor: pointer;\\n  border: none;\\n  margin-right: 15px;\\n\\n  &:hover {\\n    background: #292828;\\n  }\\n\"])));\nvar FileInput = styled.input(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  display: none;\\n\"])));\nvar FileLabel = styled.label(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  max-width: 200px;\\n  padding: 5px 10px;\\n  margin-top: 20px;\\n  border: 2px dashed black;\\n  cursor: pointer;\\n\"])));\nvar DropArea = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  width: 90%;\\n  font-size: 50px;\\n  height: calc(100vh - 100px);\\n  margin: 20px auto 0 auto;\\n  border: 3px dashed black;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n\"])));\nvar FileViewModeContainer = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n  display: flex;\\n  width: 75px;\\n  font-size: 30px;\\n  justify-content: space-between;\\n  transition: all 0.5s ease;\\n\\n  i {\\n    cursor: pointer;\\n    padding: 5px;\\n    border-radius: 4px;\\n  }\\n\\n  i:nth-child(1) {\\n    background-color: \", \";\\n  }\\n\\n  i:nth-child(2) {\\n    background-color: \", \";\\n  }\\n\\n  i:hover {\\n    background-color: darkgray;\\n  }\\n\"])), function (props) {\n  return props.fileModeView === 'list' && 'darkgray';\n}, function (props) {\n  return props.fileModeView === 'block' && 'darkgray';\n});\n\nvar FileContainer = function FileContainer() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openCreateDirModal = _useState2[0],\n      setOpenCreateDirModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      onDragEnter = _useState4[0],\n      setOnDragEnter = _useState4[1];\n\n  var currentFileDir = useSelector(getCurrentDir);\n  var fileStack = useSelector(getFileStack);\n  var fileModeView = useSelector(getModeFileView);\n  useEffect(function () {\n    dispatch(loadFiles(currentFileDir));\n  }, [currentFileDir]);\n\n  var backClickHandler = function backClickHandler() {\n    var backId = fileStack[fileStack.length - 1];\n    dispatch(setCurrentDir(backId));\n    dispatch(popFromFileStack());\n  };\n\n  var fileHandler = function fileHandler(event) {\n    var files = _toConsumableArray(event.target.files);\n\n    files.forEach(function (file) {\n      dispatch(uploadFile(file, currentFileDir));\n    });\n  };\n\n  var dragEnterHandler = function dragEnterHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setOnDragEnter(true);\n  };\n\n  var dragLeaveHandler = function dragLeaveHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setOnDragEnter(false);\n  };\n\n  var onDropHandler = function onDropHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var files = _toConsumableArray(event.dataTransfer.files);\n\n    files.forEach(function (file) {\n      dispatch(uploadFile(file, currentFileDir));\n    });\n    setOnDragEnter(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !onDragEnter ? /*#__PURE__*/React.createElement(Container, {\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    onDragEnter: dragEnterHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: backClickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"go back\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setOpenCreateDirModal(!openCreateDirModal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Create folder\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileLabel, {\n    htmlFor: 'file__input',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Upload file\"), /*#__PURE__*/React.createElement(FileInput, {\n    type: 'file',\n    id: \"file__input\",\n    onChange: function onChange(event) {\n      return fileHandler(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FileViewModeContainer, {\n    fileModeView: fileModeView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListIcon, {\n    onClick: function onClick() {\n      return dispatch(setFileViewMode('list'));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ViewModuleIcon, {\n    onClick: function onClick() {\n      return dispatch(setFileViewMode('block'));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FileList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), openCreateDirModal && /*#__PURE__*/React.createElement(CreateDirModal, {\n    setIsOpenModal: setOpenCreateDirModal,\n    isOpen: openCreateDirModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(DropArea, {\n    onDrop: onDropHandler,\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    onDragEnter: dragEnterHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Drag files there\"), /*#__PURE__*/React.createElement(UploaderContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FileContainer;","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileContainer.js"],"names":["React","useEffect","useState","styled","FileList","CreateDirModal","useDispatch","useSelector","getCurrentDir","getFileStack","getModeFileView","loadFiles","popFromFileStack","setCurrentDir","setFileViewMode","uploadFile","UploaderContainer","ListIcon","ViewModuleIcon","Container","div","Button","button","FileInput","input","FileLabel","label","DropArea","FileViewModeContainer","props","fileModeView","FileContainer","dispatch","openCreateDirModal","setOpenCreateDirModal","onDragEnter","setOnDragEnter","currentFileDir","fileStack","backClickHandler","backId","length","fileHandler","event","files","target","forEach","file","dragEnterHandler","preventDefault","stopPropagation","dragLeaveHandler","onDropHandler","dataTransfer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport FileList from './FileList/FileList';\nimport CreateDirModal from './CreateDirModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCurrentDir, getFileStack, getModeFileView } from '../../redux/file-selector';\nimport {\n  loadFiles,\n  popFromFileStack,\n  setCurrentDir,\n  setFileViewMode,\n  uploadFile,\n} from '../../redux/file-reducer';\nimport UploaderContainer from './FileUploader/UploaderContainer';\n\nimport ListIcon from '@material-ui/icons/List';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\n\nconst Container = styled.div`\n  max-width: 900px;\n  height: 100vh;\n  margin: 40px auto;\n`;\n\nconst Button = styled.button`\n  background: black;\n  padding: 15px;\n  color: white;\n  border-radius: 15px;\n  outline: none;\n  cursor: pointer;\n  border: none;\n  margin-right: 15px;\n\n  &:hover {\n    background: #292828;\n  }\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst FileLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 200px;\n  padding: 5px 10px;\n  margin-top: 20px;\n  border: 2px dashed black;\n  cursor: pointer;\n`;\n\nconst DropArea = styled.div`\n  width: 90%;\n  font-size: 50px;\n  height: calc(100vh - 100px);\n  margin: 20px auto 0 auto;\n  border: 3px dashed black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst FileViewModeContainer = styled.div`\n  margin-top: 10px;\n  display: flex;\n  width: 75px;\n  font-size: 30px;\n  justify-content: space-between;\n  transition: all 0.5s ease;\n\n  i {\n    cursor: pointer;\n    padding: 5px;\n    border-radius: 4px;\n  }\n\n  i:nth-child(1) {\n    background-color: ${props => props.fileModeView === 'list' && 'darkgray'};\n  }\n\n  i:nth-child(2) {\n    background-color: ${props => props.fileModeView === 'block' && 'darkgray'};\n  }\n\n  i:hover {\n    background-color: darkgray;\n  }\n`;\n\nconst FileContainer = () => {\n  const dispatch = useDispatch();\n\n  const [openCreateDirModal, setOpenCreateDirModal] = useState(false);\n  const [onDragEnter, setOnDragEnter] = useState(false);\n  const currentFileDir = useSelector(getCurrentDir);\n  let fileStack = useSelector(getFileStack);\n  const fileModeView = useSelector(getModeFileView);\n\n  useEffect(() => {\n    dispatch(loadFiles(currentFileDir));\n  }, [currentFileDir]);\n\n  const backClickHandler = () => {\n    const backId = fileStack[fileStack.length - 1];\n    dispatch(setCurrentDir(backId));\n    dispatch(popFromFileStack());\n  };\n\n  const fileHandler = event => {\n    const files = [...event.target.files];\n\n    files.forEach(file => {\n      dispatch(uploadFile(file, currentFileDir));\n    });\n  };\n\n  const dragEnterHandler = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setOnDragEnter(true);\n  };\n\n  const dragLeaveHandler = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setOnDragEnter(false);\n  };\n\n  const onDropHandler = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const files = [...event.dataTransfer.files];\n    files.forEach(file => {\n      dispatch(uploadFile(file, currentFileDir));\n    });\n    setOnDragEnter(false);\n  };\n\n  return (\n    <>\n      {!onDragEnter ? (\n        <Container\n          onDragLeave={dragLeaveHandler}\n          onDragOver={dragEnterHandler}\n          onDragEnter={dragEnterHandler}\n        >\n          <Button onClick={backClickHandler}>go back</Button>\n          <Button onClick={() => setOpenCreateDirModal(!openCreateDirModal)}>Create folder</Button>\n          <div>\n            <FileLabel htmlFor={'file__input'}>Upload file</FileLabel>\n            <FileInput type={'file'} id=\"file__input\" onChange={event => fileHandler(event)} />\n          </div>\n\n          <FileViewModeContainer fileModeView={fileModeView}>\n            <ListIcon onClick={() => dispatch(setFileViewMode('list'))} />\n            <ViewModuleIcon onClick={() => dispatch(setFileViewMode('block'))} />\n          </FileViewModeContainer>\n\n          <FileList />\n\n          {openCreateDirModal && (\n            <CreateDirModal setIsOpenModal={setOpenCreateDirModal} isOpen={openCreateDirModal} />\n          )}\n        </Container>\n      ) : (\n        <DropArea\n          onDrop={onDropHandler}\n          onDragLeave={dragLeaveHandler}\n          onDragOver={dragEnterHandler}\n          onDragEnter={dragEnterHandler}\n        >\n          Drag files there\n        </DropArea>\n      )}\n      <UploaderContainer />\n    </>\n  );\n};\n\nexport default FileContainer;\n"]},"metadata":{},"sourceType":"module"}