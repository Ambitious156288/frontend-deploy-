{"ast":null,"code":"import { addFile, changeLoadingProgress, toggleVisible } from \"../redux/uploader-reducer\";\nimport axios from \"axios\";\nvar SERVER_HOST = \"http://localhost:8080/\";\nvar userInfoAuth = {\n  headers: {\n    Authorization: localStorage.getItem('tokenStore')\n  }\n};\nexport var instanceAxios = axios.create({\n  baseURL: \"\".concat(SERVER_HOST, \"api/\")\n});\nexport var fileAPI = {\n  getFiles: function getFiles(dirId, sort) {\n    if (dirId) {\n      return instanceAxios.get(\"/files?parent=\".concat(dirId), userInfoAuth).then(function (data) {\n        return data.data;\n      });\n    }\n\n    if (sort) {\n      return instanceAxios.get(\"/files?sort=\".concat(sort), userInfoAuth).then(function (data) {\n        return data.data;\n      });\n    }\n\n    if (dirId && sort) {\n      return instanceAxios.get(\"/files?parent=\".concat(dirId, \"&sort=\").concat(sort), userInfoAuth).then(function (data) {\n        return data.data;\n      });\n    }\n\n    return instanceAxios.get(\"/files\", userInfoAuth).then(function (data) {\n      return data.data;\n    });\n  },\n  createDir: function createDir(dirId, name) {\n    return instanceAxios.post(\"/files/\", {\n      name: name,\n      parent: dirId,\n      type: \"dir\"\n    }, userInfoAuth).then(function (data) {\n      return data.data;\n    });\n  },\n  uploadFile: function uploadFile(file, dirId, dispatch) {\n    var formData = new FormData();\n    formData.append(\"file\", file);\n\n    if (dirId) {\n      formData.append(\"parent\", dirId);\n    }\n\n    var uploadingFile = {\n      name: file.name,\n      progress: 0,\n      id: Date.now()\n    };\n    dispatch(toggleVisible(true));\n    dispatch(addFile(uploadingFile));\n    return instanceAxios.post(\"/files/upload/\", formData, {\n      onUploadProgress: function onUploadProgress(progressEvent) {\n        var totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader(\"content-length\") || progressEvent.target.getResponseHeader(\"x-decompressed-content-length\");\n\n        if (totalLength) {\n          var progress = Math.round(progressEvent.loaded * 100 / totalLength);\n          dispatch(changeLoadingProgress({\n            file: uploadingFile,\n            progress: progress\n          }));\n        }\n      },\n      headers: {\n        Authorization: localStorage.getItem('tokenStore')\n      }\n    }).then(function (data) {\n      return data.data;\n    });\n  },\n  downloadFile: function downloadFile(fileId) {\n    var fileBlob = instanceAxios.get(\"/files/download/?id=\".concat(fileId), {\n      responseType: function responseType() {\n        responseType: \"blob\";\n      },\n      headers: {\n        Authorization: localStorage.getItem('tokenStore')\n      }\n    }).then(function (data) {\n      return data.data;\n    });\n    return fileBlob;\n  },\n  deleteFile: function deleteFile(fileId) {\n    return instanceAxios.delete(\"/files/?id=\".concat(fileId)).then(function (data) {\n      return data.data;\n    });\n  },\n  searchFile: function searchFile(searchString) {\n    return instanceAxios.get(\"/files/search?search=\".concat(searchString)).then(function (data) {\n      return data.data;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/api/file-api.js"],"names":["addFile","changeLoadingProgress","toggleVisible","axios","SERVER_HOST","userInfoAuth","headers","Authorization","localStorage","getItem","instanceAxios","create","baseURL","fileAPI","getFiles","dirId","sort","get","then","data","createDir","name","post","parent","type","uploadFile","file","dispatch","formData","FormData","append","uploadingFile","progress","id","Date","now","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","Math","round","loaded","downloadFile","fileId","fileBlob","responseType","deleteFile","delete","searchFile","searchString"],"mappings":"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","sourcesContent":["import {\n  addFile,\n  changeLoadingProgress,\n  toggleVisible,\n} from \"../redux/uploader-reducer\";\n\nimport axios from \"axios\";\n\nconst SERVER_HOST = \"http://localhost:8080/\";\n\nconst userInfoAuth =  { headers: { Authorization:  localStorage.getItem('tokenStore') }};\n\nexport const instanceAxios = axios.create({\n  baseURL: `${SERVER_HOST}api/`,\n});\n\nexport const fileAPI = {\n  getFiles(dirId, sort) {\n    if (dirId) {\n      return instanceAxios\n        .get(`/files?parent=${dirId}`, userInfoAuth)\n        .then((data) => data.data);\n    }\n    if (sort) {\n      return instanceAxios.get(`/files?sort=${sort}`, userInfoAuth).then((data) => data.data);\n    }\n    if (dirId && sort) {\n      return instanceAxios\n        .get(`/files?parent=${dirId}&sort=${sort}`, userInfoAuth)\n        .then((data) => data.data);\n    }\n    return instanceAxios.get(`/files`, userInfoAuth).then((data) => data.data);\n  },\n\n  createDir(dirId, name) {\n    return instanceAxios\n      .post(\"/files/\", {\n        name,\n        parent: dirId,\n        type: \"dir\",\n      }, userInfoAuth)\n      .then((data) => data.data);\n  },\n\n  uploadFile(file, dirId, dispatch) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    if (dirId) {\n      formData.append(\"parent\", dirId);\n    }\n\n    let uploadingFile = { name: file.name, progress: 0, id: Date.now() };\n    dispatch(toggleVisible(true));\n    dispatch(addFile(uploadingFile));\n\n    return instanceAxios\n      .post(\"/files/upload/\", formData, {\n        onUploadProgress: (progressEvent) => {\n          const totalLength = progressEvent.lengthComputable\n            ? progressEvent.total\n            : progressEvent.target.getResponseHeader(\"content-length\") ||\n              progressEvent.target.getResponseHeader(\n                \"x-decompressed-content-length\"\n              );\n          if (totalLength) {\n            const progress = Math.round(\n              (progressEvent.loaded * 100) / totalLength\n            );\n            dispatch(\n              changeLoadingProgress({ file: uploadingFile, progress: progress })\n            );\n          }\n        },\n        headers: { Authorization:  localStorage.getItem('tokenStore') }\n      })\n      .then((data) => data.data);\n  },\n\n  downloadFile(fileId) {\n    const fileBlob = instanceAxios\n      .get(`/files/download/?id=${fileId}`, {\n        responseType: ()=> {responseType: \"blob\"},\n        headers: { Authorization:  localStorage.getItem('tokenStore') }\n      })\n      .then((data) => data.data);\n    return fileBlob;\n  },\n\n  deleteFile(fileId) {\n    return instanceAxios\n      .delete(`/files/?id=${fileId}`)\n      .then((data) => data.data);\n  },\n\n  searchFile(searchString) {\n    return instanceAxios\n      .get(`/files/search?search=${searchString}`)\n      .then((data) => data.data);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}