{"ast":null,"code":"import _slicedToArray from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileList/File/File.js\";\n\nimport React, { useState } from 'react';\nimport classes from './File.module.scss';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteFile, downloadFile, pushToFileStack, setCurrentDir } from \"../../../../redux/file-reducer\";\nimport { getCurrentDir, getModeFileView } from \"../../../../redux/file-selector\";\nimport Fade from 'react-reveal/Fade';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport anotherClasses from '../FileList.module.scss';\nimport { formatBytes } from './FormatBytes.js';\n\nvar File = function File(props) {\n  var dispatch = useDispatch();\n  var _props$file = props.file,\n      name = _props$file.name,\n      date = _props$file.date,\n      size = _props$file.size,\n      type = _props$file.type;\n  var currentDir = useSelector(getCurrentDir);\n  var fileModeView = useSelector(getModeFileView);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isErrorModal = _useState2[0],\n      setErrorModal = _useState2[1];\n\n  var openDirHandler = function openDirHandler() {\n    if (props.file.type === 'dir') {\n      dispatch(setCurrentDir(props.file._id));\n      dispatch(pushToFileStack(currentDir));\n    }\n  };\n\n  var downloadFileHandler = function downloadFileHandler(event) {\n    event.stopPropagation();\n    dispatch(downloadFile(props.file));\n  };\n\n  var deleteFileHandler = function deleteFileHandler(event) {\n    event.stopPropagation();\n\n    if (props.file.type === 'dir' && props.file.children.length !== 0) {\n      setErrorModal(true);\n      return;\n    }\n\n    dispatch(deleteFile(props.file));\n  };\n\n  if (fileModeView === 'list') {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Fade, {\n      top: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileContainer,\n      onClick: function onClick() {\n        return openDirHandler();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, type === 'dir' ? /*#__PURE__*/React.createElement(FolderIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(InsertDriveFileIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, date.slice(0, 10)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.size,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, formatBytes(size)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.deleteFile,\n      onClick: function onClick(event) {\n        return deleteFileHandler(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    })), type !== 'dir' && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadBtn,\n      onClick: function onClick(event) {\n        return downloadFileHandler(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GetAppIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n  if (fileModeView === 'block') {\n    return /*#__PURE__*/React.createElement(Fade, {\n      bottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileContainerBlock,\n      onClick: function onClick() {\n        return openDirHandler();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileIconBlock,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, type === 'dir' ? /*#__PURE__*/React.createElement(FolderIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(InsertDriveFileIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileInfoBlock,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, date.slice(0, 10)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.size,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, formatBytes(size))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.fileActions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.deleteFileBlock,\n      onClick: function onClick(event) {\n        return deleteFileHandler(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), type !== 'dir' && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadBtnBlock,\n      onClick: function onClick(event) {\n        return downloadFileHandler(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GetAppIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })))));\n  }\n};\n\nexport default File;","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileList/File/File.js"],"names":["React","useState","classes","useDispatch","useSelector","deleteFile","downloadFile","pushToFileStack","setCurrentDir","getCurrentDir","getModeFileView","Fade","DeleteIcon","GetAppIcon","FolderIcon","InsertDriveFileIcon","anotherClasses","formatBytes","File","props","dispatch","file","name","date","size","type","currentDir","fileModeView","isErrorModal","setErrorModal","openDirHandler","_id","downloadFileHandler","event","stopPropagation","deleteFileHandler","children","length","fileContainer","fileNumber","title","slice","downloadBtn","fileContainerBlock","fileIconBlock","fileInfoBlock","fileActions","deleteFileBlock","downloadBtnBlock"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classes from './File.module.scss'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteFile, downloadFile, pushToFileStack, setCurrentDir } from \"../../../../redux/file-reducer\";\nimport { getCurrentDir, getModeFileView } from \"../../../../redux/file-selector\";\nimport Fade from 'react-reveal/Fade';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\nimport anotherClasses from '../FileList.module.scss'\n\nimport {formatBytes} from './FormatBytes.js'\n\nconst File = (props) => {\n  const dispatch = useDispatch()\n  const { name, date, size, type } = props.file\n  const currentDir = useSelector(getCurrentDir)\n  const fileModeView = useSelector(getModeFileView)\n  const [isErrorModal, setErrorModal] = useState(false)\n\n\n  const openDirHandler = () => {\n    if (props.file.type === 'dir') {\n      dispatch(setCurrentDir(props.file._id))\n      dispatch(pushToFileStack(currentDir))\n    }\n  }\n\n  const downloadFileHandler = (event) => {\n    event.stopPropagation()\n    dispatch(downloadFile(props.file))\n  }\n\n  const deleteFileHandler = (event) => {\n    event.stopPropagation()\n    if (props.file.type === 'dir' && props.file.children.length !== 0) {\n      setErrorModal(true)\n      return\n    }\n    dispatch(deleteFile(props.file))\n  }\n\n  if (fileModeView === 'list') {\n    return (\n      <>\n        <Fade top>\n          <div className={classes.fileContainer} onClick={() => openDirHandler()}>\n            <div className={classes.fileNumber}>\n              {type === 'dir'\n                ? <FolderIcon />\n                : <InsertDriveFileIcon />}\n            </div>\n            <div className={classes.title}>{name}</div>\n            <div className={classes.date}>{date.slice(0, 10)}</div>\n            <div className={classes.size}>{formatBytes(size)}</div>\n            <div className={classes.deleteFile}\n              onClick={(event) => deleteFileHandler(event)}>\n              <DeleteIcon />\n            </div>\n            {type !== 'dir'\n              &&\n              <div\n                className={classes.downloadBtn}\n                onClick={(event) => downloadFileHandler(event)}\n              >\n                <GetAppIcon />\n              </div>\n            }\n\n          </div>\n        </Fade>\n      </>\n    );\n  }\n\n  if (fileModeView === 'block') {\n    return (\n      <Fade bottom>\n        <div className={classes.fileContainerBlock} onClick={() => openDirHandler()}>\n          <div className={classes.fileIconBlock}>\n            {type === 'dir'\n              ? <FolderIcon />\n              : <InsertDriveFileIcon />}</div>\n          <div className={classes.fileInfoBlock}>\n            <div className={classes.title}>{name}</div>\n            <div className={classes.date}>{date.slice(0, 10)}</div>\n            <div className={classes.size}>{formatBytes(size)}</div>\n          </div>\n          <div className={classes.fileActions}>\n            <div className={classes.deleteFileBlock}\n              onClick={(event) => deleteFileHandler(event)}>\n              <DeleteIcon />\n            </div>\n            {type !== 'dir'\n              &&\n              <div\n                className={classes.downloadBtnBlock}\n                onClick={(event) => downloadFileHandler(event)}\n              >\n                <GetAppIcon />\n              </div>\n            }\n          </div>\n        </div>\n      </Fade>\n    )\n  }\n};\n\nexport default File;"]},"metadata":{},"sourceType":"module"}