{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/PhotoGallery/FileUploadView.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { singleFileUpload, multipleFilesUpload } from '../../api/api';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nvar FileUploadView = function FileUploadView(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      singleFile = _useState2[0],\n      setSingleFile = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      multipleFiles = _useState4[0],\n      setMultipleFiles = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      singleProgress = _useState8[0],\n      setSingleProgress = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      multipleProgress = _useState10[0],\n      setMultipleProgress = _useState10[1];\n\n  var SingleFileChange = function SingleFileChange(e) {\n    setSingleFile(e.target.files[0]);\n    setSingleProgress(0);\n  };\n\n  var MultipleFileChange = function MultipleFileChange(e) {\n    setMultipleFiles(e.target.files);\n    setMultipleProgress(0);\n  };\n\n  var singleFileOptions = {\n    onUploadProgress: function onUploadProgress(progressEvent) {\n      var loaded = progressEvent.loaded,\n          total = progressEvent.total;\n      var percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setSingleProgress(percentage);\n    }\n  };\n  var mulitpleFileOptions = {\n    onUploadProgress: function onUploadProgress(progressEvent) {\n      var loaded = progressEvent.loaded,\n          total = progressEvent.total;\n      var percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setMultipleProgress(percentage);\n    }\n  };\n\n  var uploadSingleFile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, formData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('tokenStore');\n\n              if (!token) {\n                _context.next = 7;\n                break;\n              }\n\n              formData = new FormData();\n              formData.append('file', singleFile);\n              _context.next = 6;\n              return singleFileUpload(formData, singleFileOptions, token);\n\n            case 6:\n              props.getsingle();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadSingleFile() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var UploadMultipleFiles = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var formData, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('title', title);\n\n              for (i = 0; i < multipleFiles.length; i++) {\n                formData.append('files', multipleFiles[i]);\n              }\n\n              _context2.next = 5;\n              return multipleFilesUpload(formData, mulitpleFileOptions);\n\n            case 5:\n              props.getMultiple();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function UploadMultipleFiles() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Select Single File\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"raised-button-file\",\n    type: \"file\",\n    onChange: function onChange(e) {\n      return SingleFileChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"raised-button-file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Choose File\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"button\",\n    onClick: function onClick() {\n      return uploadSingleFile();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: singleProgress,\n    text: \"\".concat(singleProgress, \"%\"),\n    styles: buildStyles({\n      rotation: 0.25,\n      strokeLinecap: 'butt',\n      textSize: '16px',\n      pathTransitionDuration: 0.5,\n      pathColor: \"rgba(255, 136, 136, \".concat(singleProgress / 100, \")\"),\n      textColor: '#f88',\n      trailColor: '#d6d6d6',\n      backgroundColor: '#3e98c7'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Select Multiple Files\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"enter title for your gallery\",\n    variant: \"outlined\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    type: \"file\",\n    id: \"raised-button-files\",\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      return MultipleFileChange(e);\n    },\n    multiple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"raised-button-files\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Choose Files\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"button\",\n    onClick: function onClick() {\n      return UploadMultipleFiles();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: multipleProgress,\n    text: \"\".concat(multipleProgress, \"%\"),\n    styles: buildStyles({\n      rotation: 0.25,\n      strokeLinecap: 'butt',\n      textSize: '16px',\n      pathTransitionDuration: 0.5,\n      pathColor: \"rgba(255, 136, 136, \".concat(multipleProgress / 100, \")\"),\n      textColor: '#f88',\n      trailColor: '#d6d6d6',\n      backgroundColor: '#3e98c7'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }))));\n};\n\nexport default FileUploadView;","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/PhotoGallery/FileUploadView.js"],"names":["React","useState","useEffect","singleFileUpload","multipleFilesUpload","CircularProgressbar","buildStyles","Grid","Button","TextField","FileUploadView","props","singleFile","setSingleFile","multipleFiles","setMultipleFiles","title","setTitle","singleProgress","setSingleProgress","multipleProgress","setMultipleProgress","SingleFileChange","e","target","files","MultipleFileChange","singleFileOptions","onUploadProgress","progressEvent","loaded","total","percentage","Math","floor","mulitpleFileOptions","uploadSingleFile","token","localStorage","getItem","formData","FormData","append","getsingle","UploadMultipleFiles","i","length","getMultiple","display","width","height","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {singleFileUpload, multipleFilesUpload} from '../../api/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst FileUploadView = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    const [multipleFiles, setMultipleFiles] = useState('');\n    const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    const MultipleFileChange = (e) => {\n        setMultipleFiles(e.target.files);\n        setMultipleProgress(0);\n        \n    }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    const mulitpleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setMultipleProgress(percentage);\n        }\n    }\n    const uploadSingleFile = async () => {\n        \n        const token = localStorage.getItem('tokenStore')\n        if (token) {\n            const formData = new FormData();\n            formData.append('file', singleFile);\n            await singleFileUpload(formData, singleFileOptions, token);\n            props.getsingle();\n        }\n    }\n\n    const UploadMultipleFiles = async () => {\n        const formData = new FormData();\n        formData.append('title', title);\n        for (let i = 0; i < multipleFiles.length; i++) {\n            formData.append('files', multipleFiles[i]);                      \n        }\n        await multipleFilesUpload(formData, mulitpleFileOptions);\n        props.getMultiple();\n    }\n    \n    return (\n        <Grid container spacing={3}>\n\n            <Grid item xs={6}>\n                <label>Select Single File</label>\n                <br/>\n                <br/>\n                <input accept=\"image/*\" style={{ display: 'none' }} id=\"raised-button-file\" type=\"file\" onChange={(e) => SingleFileChange(e)} />\n                <label htmlFor=\"raised-button-file\">\n                    <Button variant=\"contained\" component=\"span\" color=\"primary\">\n                        Choose File\n                    </Button>\n                </label> \n                <br/>\n                <br/>\n                <Button variant=\"contained\" type=\"button\" onClick={() => uploadSingleFile()} >Upload</Button>\n                <br/>\n                <br/>\n                <div style={{ width: 100, height: 100 }}>\n                                <CircularProgressbar\n                                    value={singleProgress}\n                                    text={`${singleProgress}%`}\n                                    styles={buildStyles({\n                                        rotation: 0.25,\n                                        strokeLinecap: 'butt',\n                                        textSize: '16px',\n                                        pathTransitionDuration: 0.5,\n                                        pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                        textColor: '#f88',\n                                        trailColor: '#d6d6d6',\n                                        backgroundColor: '#3e98c7',\n                                    })}\n                                 />\n                </div>\n            </Grid>\n\n            <Grid item xs={6}>\n                            <label>Select Multiple Files</label>\n                            <br/>\n                            <br/>\n                            <TextField  label=\"enter title for your gallery\" variant=\"outlined\" type=\"text\" onChange={(e) => setTitle(e.target.value) } />\n                            <br/>\n                            <br/>\n                            <input accept=\"image/*\" type=\"file\" id=\"raised-button-files\" style={{ display: 'none' }} onChange={(e) => MultipleFileChange(e)} multiple/>\n                            <label htmlFor=\"raised-button-files\">\n                                <Button variant=\"contained\" component=\"span\" color=\"primary\">\n                                    Choose Files\n                                </Button>\n                            </label>  \n                            <br/>\n                            <br/>\n                            <Button variant=\"contained\" type=\"button\" onClick={() => UploadMultipleFiles()}>Upload</Button>\n                            <br/>\n                            <br/>\n                            <div style={{ width: 100, height: 100 }}>\n                                <CircularProgressbar\n                                    value={multipleProgress}\n                                    text={`${multipleProgress}%`}\n                                    styles={buildStyles({\n                                        rotation: 0.25,\n                                        strokeLinecap: 'butt',\n                                        textSize: '16px',\n                                        pathTransitionDuration: 0.5,\n                                        pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n                                        textColor: '#f88',\n                                        trailColor: '#d6d6d6',\n                                        backgroundColor: '#3e98c7',\n                                    })}\n                                />\n                            </div>\n                </Grid>\n        </Grid>\n    );\n}\n\nexport default FileUploadView;"]},"metadata":{},"sourceType":"module"}