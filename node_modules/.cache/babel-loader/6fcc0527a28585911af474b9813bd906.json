{"ast":null,"code":"import _slicedToArray from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileUploader/Message.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { toggleVisible } from \"../../../redux/uploader-reducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function Message(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    setOpen(!open);\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch(toggleVisible(false));\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, children));\n}","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/components/VariousFiles/FileUploader/Message.js"],"names":["React","Button","Snackbar","MuiAlert","makeStyles","toggleVisible","useDispatch","Alert","props","Message","children","dispatch","useState","open","setOpen","handleClick","handleClose","event","reason"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,WAAT,QAA2B,aAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,eAAe,SAASC,OAAT,OAA6B;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAC1C,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,wBAAwBN,KAAK,CAACY,QAAN,CAAe,IAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDP,IAAAA,QAAQ,CAACN,aAAa,CAAC,KAAD,CAAd,CAAR;AACAS,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAPD;;AASA,sBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAA8C,IAAA,OAAO,EAAEG,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF,CADJ;AAOD","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { toggleVisible } from \"../../../redux/uploader-reducer\";\nimport { useDispatch} from \"react-redux\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Message({children}) {\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch(toggleVisible(false));\n    setOpen(!open);\n  };\n\n  return (\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          {children}\n        </Alert>\n      </Snackbar>\n  );\n}"]},"metadata":{},"sourceType":"module"}