{"ast":null,"code":"import _objectSpread from \"/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar uploaderReducer = createSlice({\n  name: 'uploaderReducer',\n  initialState: {\n    isVisible: false,\n    files: []\n  },\n  reducers: {\n    toggleVisible: function toggleVisible(state, action) {\n      state.isVisible = action.payload;\n    },\n    addFile: function addFile(state, action) {\n      state.files.push(action.payload);\n    },\n    removeFile: function removeFile(state, action) {\n      state.files = state.files.filter(function (file) {\n        return file.id !== action.payload.id;\n      });\n    },\n    changeLoadingProgress: function changeLoadingProgress(state, action) {\n      var newProgress = action.payload.progress;\n      var uploadFile = action.payload.file;\n      state.files = state.files.map(function (file) {\n        if (file.id === uploadFile.id) {\n          return _objectSpread(_objectSpread({}, file), {}, {\n            progress: newProgress\n          });\n        }\n\n        return file;\n      });\n    }\n  }\n});\nvar _uploaderReducer$acti = uploaderReducer.actions,\n    toggleVisible = _uploaderReducer$acti.toggleVisible,\n    removeFile = _uploaderReducer$acti.removeFile,\n    addFile = _uploaderReducer$acti.addFile,\n    changeLoadingProgress = _uploaderReducer$acti.changeLoadingProgress;\nexport { toggleVisible, removeFile, addFile, changeLoadingProgress };\nexport default uploaderReducer.reducer;","map":{"version":3,"sources":["/Users/kkalwik/Desktop/test/fix-praca-inz/frontend/src/redux/uploader-reducer.js"],"names":["createSlice","uploaderReducer","name","initialState","isVisible","files","reducers","toggleVisible","state","action","payload","addFile","push","removeFile","filter","file","id","changeLoadingProgress","newProgress","progress","uploadFile","map","actions","reducer"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,IAAMC,eAAe,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,iBAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,KADC;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aADQ,yBACMC,KADN,EACaC,MADb,EACqB;AAC3BD,MAAAA,KAAK,CAACJ,SAAN,GAAkBK,MAAM,CAACC,OAAzB;AACD,KAHO;AAIRC,IAAAA,OAJQ,mBAIAH,KAJA,EAIOC,MAJP,EAIe;AACrBD,MAAAA,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;AACD,KANO;AAORG,IAAAA,UAPQ,sBAOGL,KAPH,EAOUC,MAPV,EAOkB;AACxBD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACC,OAAP,CAAeM,EAA/B;AAAA,OAAvB,CAAd;AACD,KATO;AAURC,IAAAA,qBAVQ,iCAUcT,KAVd,EAUqBC,MAVrB,EAU6B;AACnC,UAAMS,WAAW,GAAGT,MAAM,CAACC,OAAP,CAAeS,QAAnC;AACA,UAAMC,UAAU,GAAGX,MAAM,CAACC,OAAP,CAAeK,IAAlC;AAEAP,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYgB,GAAZ,CAAgB,UAACN,IAAD,EAAU;AACtC,YAAIA,IAAI,CAACC,EAAL,KAAYI,UAAU,CAACJ,EAA3B,EAA+B;AAC7B,iDAAWD,IAAX;AAAiBI,YAAAA,QAAQ,EAAED;AAA3B;AACD;;AACD,eAAOH,IAAP;AACD,OALa,CAAd;AAMD;AApBO;AANwB,CAAD,CAAnC;AA+BO,4BAAoEd,eAAe,CAACqB,OAApF;AAAA,IAAOf,aAAP,yBAAOA,aAAP;AAAA,IAAsBM,UAAtB,yBAAsBA,UAAtB;AAAA,IAAkCF,OAAlC,yBAAkCA,OAAlC;AAAA,IAA2CM,qBAA3C,yBAA2CA,qBAA3C;;AAEP,eAAehB,eAAe,CAACsB,OAA/B","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst uploaderReducer = createSlice({\n  name: 'uploaderReducer',\n  initialState: {\n    isVisible: false,\n    files: []\n  },\n  reducers: {\n    toggleVisible(state, action) {\n      state.isVisible = action.payload\n    },\n    addFile(state, action) {\n      state.files.push(action.payload)\n    },\n    removeFile(state, action) {\n      state.files = state.files.filter(file => file.id !== action.payload.id)\n    },\n    changeLoadingProgress(state, action) {\n      const newProgress = action.payload.progress\n      const uploadFile = action.payload.file\n\n      state.files = state.files.map((file) => {\n        if (file.id === uploadFile.id) {\n          return {...file, progress: newProgress}\n        }\n        return file\n      })\n    }\n  }\n})\n\n\nexport const {toggleVisible, removeFile, addFile, changeLoadingProgress} = uploaderReducer.actions\n\nexport default uploaderReducer.reducer\n"]},"metadata":{},"sourceType":"module"}